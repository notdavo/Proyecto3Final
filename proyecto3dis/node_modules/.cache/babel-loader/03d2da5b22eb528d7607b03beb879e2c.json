{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Davo\\\\Desktop\\\\proyecto3dis\\\\src\\\\Components\\\\PlantaFolder\\\\CreatePlanta.jsx\";\nimport \"./CreatePlanta.css\";\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\n\nfunction CreatePlanta() {\n  const [sucursales, setSucursales] = useState([]);\n  const [totalFacturado, setFacturado] = useState([0]);\n  const [categorias, setCategorias] = useState([]);\n  const [fechaInicial, setFechaInicial] = useState('2000-01-01');\n  const [fechaFinal, setFechaFinal] = useState('2020-12-31');\n  const [categoriaProducto, setCategoriaProducto] = useState('');\n  const [sucursal, setSucursal] = useState(1);\n\n  function setearSucursal(evento) {\n    var indexSeleccionado = evento.target.selectedIndex;\n    var idSucrusal = evento.target[indexSeleccionado].value;\n    localStorage.setItem('sucursalSeleccionada', idSucrusal);\n    setSucursal(localStorage.getItem('sucursalSeleccionada'));\n    console.log(localStorage.getItem('sucursalSeleccionada'));\n  }\n\n  function comprobarTotal() {\n    if (totalFacturado[0] != undefined) return totalFacturado[0].TOTAL;else return 0;\n  }\n\n  function setearCategoria(evento) {\n    var indexSeleccionado = evento.target.selectedIndex;\n    var nombreCategoriaSeleccionada = evento.target[indexSeleccionado].value;\n    setCategoriaProducto(nombreCategoriaSeleccionada);\n  }\n\n  useEffect(() => {\n    (async () => {\n      const res = await axios.get(`http://localhost:8000/api/Sucursal`, {});\n      setSucursales(res.data[0]);\n      localStorage.setItem('sucursalSeleccionada', res.data[0][0].idUsuario);\n    })();\n  }, []);\n  useEffect(() => {\n    (async () => {\n      console.log(\"SUCURSAL\", sucursal);\n\n      if (sucursal == 1) {\n        const res = await axios.post(`http://localhost:8003/api/ConsultaFacuradoSucursalCartago`, {\n          filterOn: '1',\n          nombreCategoriaProducto: categoriaProducto,\n          fechaInicial: fechaInicial,\n          fechaFinal: fechaFinal\n        });\n\n        if (res.data[0].length != 0) {\n          setFacturado(res.data[0]);\n          console.log(res.data);\n          console.log(res.data[0]);\n        } else {\n          setFacturado([]);\n        }\n      } else if (sucursal == 2) {\n        const res = await axios.post(`http://localhost:8003/api/ConsultaFacuradoSucursalLimon`, {\n          filterOn: '1',\n          nombreCategoriaProducto: categoriaProducto,\n          fechaInicial: fechaInicial,\n          fechaFinal: fechaFinal\n        });\n\n        if (res.data[0].length != 0) {\n          setFacturado(res.data[0]);\n          console.log(res.data[0]);\n        } else {\n          setFacturado([]);\n        }\n      }\n    })();\n  }, [fechaInicial, fechaFinal, categoriaProducto, sucursal]);\n  useEffect(() => {\n    (async () => {\n      const res = await axios.get(`http://localhost:8000/api/Categorias`, {});\n      setCategorias(res.data[0]);\n    })();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Corporativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"topBarCorporativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"bot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Cerrar Sesion\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"topBarCorporativo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"marco\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/InventarioSucursal`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Inventario Sucursal\")), /*#__PURE__*/React.createElement(Link, {\n    to: `/FacturadoSucursal`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Facturado Por sucursal\")), /*#__PURE__*/React.createElement(Link, {\n    to: `/FacturadoConsolidado`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Facturado Consolidado\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"marco3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, \"Sucursal\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: setearSucursal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, sucursales.map(sucursal => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: `${sucursal.idSucursal}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, `${sucursal.nombreSucursal} - ${sucursal.idSucursal}`);\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, \"Fecha Inicial\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: fechaInicial,\n    min: \"2000-01-01\",\n    max: \"2020-12-31\",\n    onChange: e => setFechaInicial(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, \"Fecha Final\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: fechaFinal,\n    min: \"2020-01-01\",\n    max: \"2020-12-31\",\n    onChange: e => setFechaFinal(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, \"Categor\\xEDa\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: setearCategoria,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, \"Todo\"), categorias.map(categoria => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      value: `${categoria.nombreCategoria}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 25\n      }\n    }, `${categoria.nombreCategoria}`);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"marco2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"marco4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    id: \"productos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 33\n    }\n  }, \"Categoria\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 33\n    }\n  }, \"Facturado\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 33\n    }\n  }, \"Fecha\"))), totalFacturado.map(facturado => /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 37\n    }\n  }, facturado.Categoria), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 37\n    }\n  }, facturado.Facturado_Categoria), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 37\n    }\n  }, facturado.Fecha)))), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 33\n    }\n  }, \"Total Facturado\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 33\n    }\n  }, comprobarTotal()\n  /*totalFacturado[0].TOTAL*/\n  ))))))));\n}\n\nexport default CreatePlanta;","map":{"version":3,"sources":["C:/Users/Davo/Desktop/proyecto3dis/src/Components/PlantaFolder/CreatePlanta.jsx"],"names":["axios","React","useEffect","useState","Button","Modal","Container","Col","Row","Image","CreatePlanta","sucursales","setSucursales","totalFacturado","setFacturado","categorias","setCategorias","fechaInicial","setFechaInicial","fechaFinal","setFechaFinal","categoriaProducto","setCategoriaProducto","sucursal","setSucursal","setearSucursal","evento","indexSeleccionado","target","selectedIndex","idSucrusal","value","localStorage","setItem","getItem","console","log","comprobarTotal","undefined","TOTAL","setearCategoria","nombreCategoriaSeleccionada","res","get","data","idUsuario","post","filterOn","nombreCategoriaProducto","length","map","idSucursal","nombreSucursal","e","categoria","nombreCategoria","facturado","Categoria","Facturado_Categoria","Fecha"],"mappings":";AAAA,OAAO,oBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;AAEA,SAASC,YAAT,GAAwB;AACpB,QAAM,CAACC,UAAD,EAAeC,aAAf,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,cAAD,EAAmBC,YAAnB,IAAmCX,QAAQ,CAAC,CAAC,CAAD,CAAD,CAAjD;AACA,QAAM,CAACY,UAAD,EAAeC,aAAf,IAAgCb,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACc,YAAD,EAAiBC,eAAjB,IAAoCf,QAAQ,CAAC,YAAD,CAAlD;AACA,QAAM,CAACgB,UAAD,EAAeC,aAAf,IAAgCjB,QAAQ,CAAC,YAAD,CAA9C;AACA,QAAM,CAACkB,iBAAD,EAAsBC,oBAAtB,IAA8CnB,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM,CAACoB,QAAD,EAAaC,WAAb,IAA4BrB,QAAQ,CAAC,CAAD,CAA1C;;AAEA,WAASsB,cAAT,CAAwBC,MAAxB,EAAgC;AAC9B,QAAIC,iBAAiB,GAAGD,MAAM,CAACE,MAAP,CAAcC,aAAtC;AACA,QAAIC,UAAU,GAAGJ,MAAM,CAACE,MAAP,CAAcD,iBAAd,EAAiCI,KAAlD;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,sBAArB,EAA6CH,UAA7C;AACAN,IAAAA,WAAW,CAACQ,YAAY,CAACE,OAAb,CAAqB,sBAArB,CAAD,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAY,CAACE,OAAb,CAAqB,sBAArB,CAAZ;AACD;;AAED,WAASG,cAAT,GAA0B;AACxB,QAAGxB,cAAc,CAAC,CAAD,CAAd,IAAqByB,SAAxB,EACE,OAAOzB,cAAc,CAAC,CAAD,CAAd,CAAkB0B,KAAzB,CADF,KAGE,OAAO,CAAP;AACH;;AAED,WAASC,eAAT,CAAyBd,MAAzB,EAAiC;AAC7B,QAAIC,iBAAiB,GAAGD,MAAM,CAACE,MAAP,CAAcC,aAAtC;AACA,QAAIY,2BAA2B,GAAGf,MAAM,CAACE,MAAP,CAAcD,iBAAd,EAAiCI,KAAnE;AACAT,IAAAA,oBAAoB,CAACmB,2BAAD,CAApB;AACH;;AAEDvC,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,YAAMwC,GAAG,GAAG,MAAM1C,KAAK,CAAC2C,GAAN,CAAW,oCAAX,EAAgD,EAAhD,CAAlB;AACA/B,MAAAA,aAAa,CAAC8B,GAAG,CAACE,IAAJ,CAAS,CAAT,CAAD,CAAb;AACAZ,MAAAA,YAAY,CAACC,OAAb,CAAqB,sBAArB,EAA6CS,GAAG,CAACE,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAeC,SAA5D;AACH,KAJD;AAKH,GANQ,EAMP,EANO,CAAT;AAQA3C,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACXiC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBb,QAAxB;;AACA,UAAGA,QAAQ,IAAI,CAAf,EAAiB;AACf,cAAMmB,GAAG,GAAG,MAAM1C,KAAK,CAAC8C,IAAN,CAAY,2DAAZ,EAAwE;AACpFC,UAAAA,QAAQ,EAAE,GAD0E;AAEpFC,UAAAA,uBAAuB,EAAE3B,iBAF2D;AAGpFJ,UAAAA,YAAY,EAAEA,YAHsE;AAIpFE,UAAAA,UAAU,EAAEA;AAJwE,SAAxE,CAAlB;;AAMA,YAAGuB,GAAG,CAACE,IAAJ,CAAS,CAAT,EAAYK,MAAZ,IAAsB,CAAzB,EAA2B;AACzBnC,UAAAA,YAAY,CAAC4B,GAAG,CAACE,IAAJ,CAAS,CAAT,CAAD,CAAZ;AACAT,UAAAA,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACE,IAAhB;AACAT,UAAAA,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACE,IAAJ,CAAS,CAAT,CAAZ;AACD,SAJD,MAIK;AACH9B,UAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;AACF,OAdD,MAcM,IAAGS,QAAQ,IAAI,CAAf,EAAiB;AACrB,cAAMmB,GAAG,GAAG,MAAM1C,KAAK,CAAC8C,IAAN,CAAY,yDAAZ,EAAsE;AAClFC,UAAAA,QAAQ,EAAE,GADwE;AAElFC,UAAAA,uBAAuB,EAAE3B,iBAFyD;AAGlFJ,UAAAA,YAAY,EAAEA,YAHoE;AAIlFE,UAAAA,UAAU,EAAEA;AAJsE,SAAtE,CAAlB;;AAMA,YAAGuB,GAAG,CAACE,IAAJ,CAAS,CAAT,EAAYK,MAAZ,IAAsB,CAAzB,EAA2B;AACzBnC,UAAAA,YAAY,CAAC4B,GAAG,CAACE,IAAJ,CAAS,CAAT,CAAD,CAAZ;AACAT,UAAAA,OAAO,CAACC,GAAR,CAAYM,GAAG,CAACE,IAAJ,CAAS,CAAT,CAAZ;AACD,SAHD,MAGK;AACH9B,UAAAA,YAAY,CAAC,EAAD,CAAZ;AACD;AACF;AACF,KA9BD;AA+BH,GAhCQ,EAgCP,CAACG,YAAD,EAAcE,UAAd,EAAyBE,iBAAzB,EAA2CE,QAA3C,CAhCO,CAAT;AAkCArB,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,YAAMwC,GAAG,GAAG,MAAM1C,KAAK,CAAC2C,GAAN,CAAW,sCAAX,EAAkD,EAAlD,CAAlB;AACA3B,MAAAA,aAAa,CAAC0B,GAAG,CAACE,IAAJ,CAAS,CAAT,CAAD,CAAb;AACH,KAHD;AAIH,GALQ,EAKP,EALO,CAAT;AAOF,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,EAAE,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CADJ,CADJ,eAMI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eASI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ,eAII,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,oBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CAJJ,eAOI,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,uBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CAPJ,CATJ,eAoBI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAQ,IAAA,QAAQ,EAAEnB,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEId,UAAU,CAACuC,GAAX,CAAgB3B,QAAD,IAAc;AAC7B,wBACI;AAAQ,MAAA,KAAK,EAAG,GAAEA,QAAQ,CAAC4B,UAAW,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2C,GAAE5B,QAAQ,CAAC6B,cAAe,MAAK7B,QAAQ,CAAC4B,UAAW,EAA9F,CADJ;AAGC,GAJD,CAFJ,CAJJ,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAbJ,eAgBI;AAAO,IAAA,IAAI,EAAC,MAAZ;AACO,IAAA,KAAK,EAAElC,YADd;AAEO,IAAA,GAAG,EAAC,YAFX;AAEwB,IAAA,GAAG,EAAC,YAF5B;AAGO,IAAA,QAAQ,EAAEoC,CAAC,IAAInC,eAAe,CAACmC,CAAC,CAACzB,MAAF,CAASG,KAAV,CAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,eAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBApBJ,eAuBI;AAAO,IAAA,IAAI,EAAC,MAAZ;AACO,IAAA,KAAK,EAAEZ,UADd;AAEO,IAAA,GAAG,EAAC,YAFX;AAEwB,IAAA,GAAG,EAAC,YAF5B;AAGO,IAAA,QAAQ,EAAEkC,CAAC,IAAIjC,aAAa,CAACiC,CAAC,CAACzB,MAAF,CAASG,KAAV,CAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,eA2BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA3BJ,eA8BI;AAAQ,IAAA,QAAQ,EAAES,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,KAAK,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAGIzB,UAAU,CAACmC,GAAX,CAAgBI,SAAD,IAAe;AAC9B,wBACI;AAAQ,MAAA,KAAK,EAAG,GAAEA,SAAS,CAACC,eAAgB,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiD,GAAED,SAAS,CAACC,eAAgB,EAA7E,CADJ;AAGC,GAJD,CAHJ,CA9BJ,CADJ,eA0CI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,EAAE,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,CADJ,CADJ,EASM1C,cAAc,CAACqC,GAAf,CAAmBM,SAAS,iBAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,SAAS,CAACC,SAAf,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,SAAS,CAACE,mBAAf,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,SAAS,CAACG,KAAf,CAHJ,CADJ,CADF,CATN,eAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKtB,cAAc;AAAE;AAArB,GAFJ,CADJ,CAnBJ,CADJ,CADJ,CA1CJ,CApBJ,CADF;AAgGD;;AAED,eAAe3B,YAAf","sourcesContent":["import \"./CreatePlanta.css\";\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState,} from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nfunction CreatePlanta() {\r\n    const [sucursales  , setSucursales] = useState([]);\r\n    const [totalFacturado  , setFacturado] = useState([0]);\r\n    const [categorias  , setCategorias] = useState([]);\r\n    const [fechaInicial  , setFechaInicial] = useState('2000-01-01');\r\n    const [fechaFinal  , setFechaFinal] = useState('2020-12-31');\r\n    const [categoriaProducto  , setCategoriaProducto] = useState('');\r\n    const [sucursal  , setSucursal] = useState(1);\r\n    \r\n    function setearSucursal(evento) {\r\n      var indexSeleccionado = evento.target.selectedIndex;\r\n      var idSucrusal = evento.target[indexSeleccionado].value;\r\n      localStorage.setItem('sucursalSeleccionada', idSucrusal);\r\n      setSucursal(localStorage.getItem('sucursalSeleccionada'));\r\n      console.log(localStorage.getItem('sucursalSeleccionada'));\r\n    }\r\n\r\n    function comprobarTotal() {\r\n      if(totalFacturado[0] != undefined)\r\n        return totalFacturado[0].TOTAL;\r\n      else\r\n        return 0;\r\n    }  \r\n    \r\n    function setearCategoria(evento) {\r\n        var indexSeleccionado = evento.target.selectedIndex;\r\n        var nombreCategoriaSeleccionada = evento.target[indexSeleccionado].value;\r\n        setCategoriaProducto(nombreCategoriaSeleccionada);\r\n    }\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await axios.get(`http://localhost:8000/api/Sucursal`, { });\r\n            setSucursales(res.data[0]);\r\n            localStorage.setItem('sucursalSeleccionada', res.data[0][0].idUsuario);\r\n        })()\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n          console.log(\"SUCURSAL\", sucursal);\r\n          if(sucursal == 1){\r\n            const res = await axios.post(`http://localhost:8003/api/ConsultaFacuradoSucursalCartago`, {\r\n                  filterOn: '1',\r\n                  nombreCategoriaProducto: categoriaProducto,\r\n                  fechaInicial: fechaInicial,\r\n                  fechaFinal: fechaFinal\r\n            });\r\n            if(res.data[0].length != 0){\r\n              setFacturado(res.data[0]);\r\n              console.log(res.data);\r\n              console.log(res.data[0]);\r\n            }else{\r\n              setFacturado([]);\r\n            }\r\n          }else if(sucursal == 2){\r\n            const res = await axios.post(`http://localhost:8003/api/ConsultaFacuradoSucursalLimon`, {\r\n                  filterOn: '1',\r\n                  nombreCategoriaProducto: categoriaProducto,\r\n                  fechaInicial: fechaInicial,\r\n                  fechaFinal: fechaFinal\r\n            });\r\n            if(res.data[0].length != 0){\r\n              setFacturado(res.data[0]);\r\n              console.log(res.data[0]);\r\n            }else{\r\n              setFacturado([]);\r\n            }\r\n          }\r\n        })()\r\n    },[fechaInicial,fechaFinal,categoriaProducto,sucursal])\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await axios.get(`http://localhost:8000/api/Categorias`, { });\r\n            setCategorias(res.data[0]);\r\n        })()\r\n    },[])\r\n\r\n  return (\r\n    <div className=\"Corporativo\">\r\n        <div className=\"topBarCorporativo\">\r\n            <Link to= \"/\">\r\n                <button id=\"bot\">Cerrar Sesion</button>\r\n            </Link>\r\n        </div>\r\n        <div className=\"topBarCorporativo\">\r\n\r\n        </div>\r\n        <div className=\"marco\">\r\n            <Link to={`/InventarioSucursal`}>\r\n                <button>Inventario Sucursal</button>\r\n            </Link>\r\n            <Link to={`/FacturadoSucursal`}>\r\n                <button>Facturado Por sucursal</button>\r\n            </Link>\r\n            <Link to={`/FacturadoConsolidado`}>\r\n                <button>Facturado Consolidado</button>\r\n            </Link>\r\n        </div>\r\n        <div className=\"contenedor\">\r\n            <div className=\"marco3\">\r\n                <p>\r\n                Sucursal\r\n                </p>\r\n                <select onChange={setearSucursal}>\r\n                {\r\n                    sucursales.map((sucursal) => {\r\n                    return (\r\n                        <option value={`${sucursal.idSucursal}`}>{`${sucursal.nombreSucursal} - ${sucursal.idSucursal}`}</option>\r\n                    )\r\n                    })\r\n                }\r\n                </select>\r\n                <p>\r\n                  Fecha Inicial\r\n                </p>\r\n                <input type=\"date\"\r\n                       value={fechaInicial}\r\n                       min=\"2000-01-01\" max=\"2020-12-31\"\r\n                       onChange={e => setFechaInicial(e.target.value)}></input>\r\n                <p>\r\n                  Fecha Final\r\n                </p>\r\n                <input type=\"date\"\r\n                       value={fechaFinal}\r\n                       min=\"2020-01-01\" max=\"2020-12-31\"\r\n                       onChange={e => setFechaFinal(e.target.value)}></input>\r\n                <p>\r\n                Categoría\r\n                </p>\r\n                <select onChange={setearCategoria}>\r\n                <option value={\"\"}>Todo</option>\r\n                {\r\n                    categorias.map((categoria) => {\r\n                    return (\r\n                        <option value={`${categoria.nombreCategoria}`}>{`${categoria.nombreCategoria}`}</option>\r\n                    )\r\n                    })\r\n                }\r\n                </select>\r\n            </div>\r\n            <div className=\"marco2\">\r\n                <div className=\"marco4\">\r\n                    <table id=\"productos\"> \r\n                        <thead >\r\n                            <tr>\r\n                                <th>Categoria</th>\r\n                                <th>Facturado</th>\r\n                                <th>Fecha</th>\r\n                            </tr>\r\n                        </thead>\r\n                        { \r\n                          totalFacturado.map(facturado => (\r\n                            <tbody>                       \r\n                                <tr>\r\n                                    <td>{facturado.Categoria}</td>\r\n                                    <td>{facturado.Facturado_Categoria}</td>\r\n                                    <td>{facturado.Fecha}</td>\r\n                                </tr>\r\n                            </tbody>  \r\n                          ))\r\n                        } \r\n                        <thead >\r\n                            <tr>\r\n                                <th>Total Facturado</th>\r\n                                <td>{comprobarTotal()/*totalFacturado[0].TOTAL*/}</td>\r\n                            </tr>\r\n                        </thead>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePlanta;"]},"metadata":{},"sourceType":"module"}