{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Davo\\\\Desktop\\\\proyecto3dis\\\\src\\\\Components\\\\PlantaFolder\\\\CreatePlanta.jsx\";\nimport \"./CreatePlanta.css\";\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport Modal from 'react-bootstrap/Modal';\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\n\nconst CreatePlanta = () => {\n  const [proveedores, setProveedores] = useState([]);\n  const [OrderDate1, setOrderDate1] = useState('2013-01-01');\n  const [OrderDate2, setOrderDate2] = useState('2016-12-31');\n  const [img, setImg] = useState(\"./assets/help-icon2.png\");\n  const [show, setShow] = useState(false);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  useEffect(() => {\n    (async () => {\n      const res = await axios.post(`http://localhost:8090/api/top10Proveedores`, {\n        filterOn: '1',\n        OrderDate1: OrderDate1,\n        OrderDate2: OrderDate2\n      });\n\n      if (res.data[0].length !== undefined) {\n        console.log(\"length\", res.data[0].length);\n        setProveedores(res.data[0]);\n      }\n    })();\n  }, [OrderDate1, OrderDate2]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"div-c\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"forms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"Fecha Inicial\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    max: \"2016-12-31\",\n    min: \"2013-01-01\",\n    value: OrderDate1,\n    onChange: e => setOrderDate1(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"Fecha Final\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    max: \"2016-12-31\",\n    min: \"2013-01-01\",\n    value: OrderDate2,\n    onChange: e => setOrderDate2(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon2\",\n    onClick: () => setShow(true),\n    onMouseEnter: () => setImg('./assets/help-icon.png'),\n    onMouseLeave: () => setImg('./assets/help-icon2.png'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"\",\n    src: img,\n    className: \"d-inline-block align-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"div-nuevo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    id: \"customers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, \"Proveedor\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \"Total de Ordenes\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, \"Total Pagado\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, proveedores.map(proveedor => /*#__PURE__*/React.createElement(\"tr\", {\n    key: proveedor.SupplierName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 37\n    }\n  }, proveedor.SupplierName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 37\n    }\n  }, proveedor.Total_Orders), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }\n  }, '$ ' + proveedor.Total_Spended)))))), /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: () => setShow(false),\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Top 10 Proveedores\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"En la p\\xE1gina actual se muestra en una tabla el top 10 de los proveedores que tienen mayor cantidad de \\xF3rdenes de compras emitidas a su nombre, as\\xED como la cantidad y el monto total de las ordenes de compra emitidas a su nombre. Los datos est\\xE1n mostrados de forma descendente, es decir, del proveedor con mayor cantidad de ordenes de compra emitadas a su nombre, al proveedor con menor cantidad de ordenes de compra emitidas a su nombre.\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"OK\"))));\n};\n\nexport default CreatePlanta;","map":{"version":3,"sources":["C:/Users/Davo/Desktop/proyecto3dis/src/Components/PlantaFolder/CreatePlanta.jsx"],"names":["axios","React","useEffect","useState","Button","Modal","Container","Col","Row","Image","CreatePlanta","proveedores","setProveedores","OrderDate1","setOrderDate1","OrderDate2","setOrderDate2","img","setImg","show","setShow","handleSubmit","event","preventDefault","res","post","filterOn","data","length","undefined","console","log","e","target","value","map","proveedor","SupplierName","Total_Orders","Total_Spended"],"mappings":"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","sourcesContent":["import \"./CreatePlanta.css\";\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState,} from 'react';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nconst CreatePlanta = () => {\r\n    const [proveedores  , setProveedores] = useState([]);\r\n    const [OrderDate1, setOrderDate1] = useState('2013-01-01');\r\n    const [OrderDate2, setOrderDate2] = useState('2016-12-31');\r\n\r\n    const [img, setImg] = useState(\"./assets/help-icon2.png\");\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        (async () => {\r\n            const res = await axios.post(`http://localhost:8090/api/top10Proveedores`, { \r\n                filterOn: '1',\r\n                OrderDate1: OrderDate1,\r\n                OrderDate2: OrderDate2\r\n            });\r\n            if (res.data[0].length!==undefined){\r\n                console.log(\"length\",res.data[0].length);\r\n                setProveedores(res.data[0]);\r\n            }\r\n            \r\n        })()\r\n    },[OrderDate1,OrderDate2])\r\n\r\n    return (\r\n        <div className=\"div-c\">\r\n            <div id=\"forms\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <label>\r\n                        <p>Fecha Inicial</p>\r\n                        <input \r\n                            type=\"date\"\r\n                            max=\"2016-12-31\" \r\n                            min=\"2013-01-01\"\r\n                            value={OrderDate1}\r\n                            onChange={e => setOrderDate1(e.target.value)}\r\n                        />\r\n                    </label>\r\n                    <label >\r\n                        <p>Fecha Final</p>\r\n                        <input \r\n                            type=\"date\"\r\n                            max=\"2016-12-31\" \r\n                            min=\"2013-01-01\"\r\n                            value={OrderDate2}\r\n                            onChange={e => setOrderDate2(e.target.value)}\r\n                        />\r\n                    </label>\r\n                </form>\r\n            </div>\r\n            <div className=\"icon2\" onClick={() => setShow(true)} onMouseEnter={() => setImg('./assets/help-icon.png')} onMouseLeave={() => setImg('./assets/help-icon2.png')}>\r\n      <img\r\n            alt=\"\"\r\n            src={img}\r\n            className=\"d-inline-block align-top\"\r\n          />\r\n      </div>  \r\n            <div className=\"div-nuevo\">\r\n                <table id=\"customers\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Proveedor</th>\r\n                            <th>Total de Ordenes</th>\r\n                            <th>Total Pagado</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        { \r\n                            proveedores.map(proveedor => (\r\n                                <tr key={proveedor.SupplierName}>\r\n                                    <td>{proveedor.SupplierName}</td>\r\n                                    <td>{proveedor.Total_Orders}</td>\r\n                                    <td>{'$ '+proveedor.Total_Spended}</td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </tbody>    \r\n                </table>\r\n            </div>\r\n            <Modal\r\n      show={show}\r\n      onHide={() => setShow(false)}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header >\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Top 10 Proveedores\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <p>\r\n          En la página actual se muestra en una tabla el top 10 de los proveedores que tienen mayor cantidad de órdenes \r\n          de compras emitidas a su nombre, así como la cantidad y el monto total de las ordenes de compra emitidas a su nombre. Los datos están mostrados de forma descendente, es decir,\r\n          del proveedor con mayor cantidad de ordenes de compra emitadas a su nombre, al proveedor con menor cantidad de ordenes de compra emitidas a su nombre.\r\n        </p>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={() => setShow(false)}>OK</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n        </div>\r\n    );\r\n}\r\n  \r\nexport default CreatePlanta;"]},"metadata":{},"sourceType":"module"}